def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.bytedance.std.tracker'//埋点
apply plugin: 'apm-plugin'//apm

android {

    compileSdkVersion rootProject.ext.android.compileSdkVersion

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion

        //flutter 获取
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName


        multiDexEnabled true

        ndk {
            //设置支持的SO库架构，支持64位
            abiFilters 'armeabi-v7a'  , 'arm64-v8a' // , 'x86', 'x86_64','armeabi',
        }

    }


    //签名配置
//    signingConfigs {
//        signInfo {
//            storeFile file(rootDir.path + project.project."signing_store_file".toString())
//            storePassword project.project."signing_store_password".toString()
//            keyAlias project.project."signing_key_alias".toString()
//            keyPassword project.project."signing_key_password".toString()
//        }
//    }

    buildTypes {
        release {
            debuggable true //注意，上线需要'注释'
            zipAlignEnabled true
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.signInfo
            //极光推送配置
            manifestPlaceholders = [
                    JPUSH_PKGNAME: project.properties.applicationId_release.toString(),
                    JPUSH_APPKEY : project.properties.jpush_release.toString(), //生产
                    JPUSH_CHANNEL: project.properties.jpush_channel.toString(), //暂时填写默认值即可.
                    //注意， 这里使用的 apm 是 release key. 如需传到‘外研之声测试’，需要修改下面的值
                    APPLOG_SCHEME: "rangersapplog.63f65ee2726d21db".toString().toLowerCase()
            ]
        }
        debug {
//            applicationIdSuffix ".debug"
            multiDexEnabled true
//            signingConfig signingConfigs.signInfo
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [
                    JPUSH_PKGNAME: project.properties.applicationId_debug.toString(),
                    JPUSH_APPKEY : project.properties.jpush_debug.toString(), //测试.
                    JPUSH_CHANNEL: project.properties.jpush_channel.toString(), //暂时填写默认值即可.
                    APPLOG_SCHEME: "rangersapplog.63f65ee2726d21db".toString().toLowerCase()]
        }
    }
    buildToolsVersion '29.0.2'
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"


    //apm：https://datarangers.com.cn/datarangers/help/doc?lid=6438&did=78965
    implementation('com.volcengine:apm_insight:1.3.9') {
        exclude group: 'com.bytedance.applog'
    }
    implementation('com.volcengine:apm_insight_crash:1.3.4') {
        exclude group: 'com.bytedance.applog'
    }
    api 'com.bytedance.applog:RangersAppLog-All-cn:5.4.0'

}

ApmPlugin {
    // 是否进行插桩
    enable false
    // 是否在Debug包插桩，默认不插桩
    enableInDebug false
    // 启动分析开关：监控App启动耗时，需要同时开启pageLoadSwitch
    startSwitch = true
    // 页面响应开关：监控Activity的生命周期耗时
    pageLoadSwitch = true
    // 网络监控开关：监控okhttp3的网络请求
    okHttp3Switch = true
    // 白名单下的包进行插桩，需要填写要插装类的包名，可以填写自己的包名
//    whiteList = [
//            rootProject.ext.android.applicationId
//    ]
    // 黑名单包下类不进行插桩，可以配置包名和类名，没有可以填空
//    blackList = [
//            "com.xxx"
//    ]
}
